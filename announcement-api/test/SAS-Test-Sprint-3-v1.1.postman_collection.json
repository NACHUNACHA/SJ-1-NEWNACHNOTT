{
	"info": {
		"_postman_id": "9b16faec-3cf1-41d8-a63b-92e1a3045499",
		"name": "SAS-Test-Sprint-3-v1.1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7314284"
	},
	"item": [
		{
			"name": "Prepare-Data-PBI-8-9",
			"item": [
				{
					"name": "(PBI8-9) Title 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ids\",\"[]\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 1\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 1\",\n        \"publishDate\": \"2023-04-30T23:00:00Z\",\n        \"closeDate\": \"2023-12-31T11:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 2\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 2\",\n        \"publishDate\": \"2023-05-31T23:00:00Z\",\n        \"closeDate\": \"2023-12-31T11:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 3\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 3\",\n        \"publishDate\": null,\n        \"closeDate\": \"2023-12-31T11:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 4\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 4\",\n        \"publishDate\": null,\n        \"closeDate\": \"2023-04-30T23:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 5",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 5\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 5\",\n        \"publishDate\": \"2023-04-30T23:00:00Z\",\n        \"closeDate\": \"2023-05-02T11:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 6",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 6\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 6\",\n        \"publishDate\": \"2023-04-30T23:00:00Z\",\n        \"closeDate\": null,\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 7",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 7\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 7\",\n        \"publishDate\": \"2023-05-31T23:00:00Z\",\n        \"closeDate\": null,\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 8",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 8\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 8\",\n        \"publishDate\": null,\n        \"closeDate\": null,\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PBI8-9) Title 9",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"console.log(s_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"(PBI8-9) Title 9\",\n        \"announcementDescription\": \"(PBI8-9) Descripition 9\",\n        \"publishDate\": \"2023-04-30T23:00:00Z\",\n        \"closeDate\": \"2023-12-31T11:00:00Z\",\n        \"announcementDisplay\": \"N\",\n        \"categoryId\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PBI-8-USER-VIEW-ANNOUNCEMENT",
			"item": [
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-1-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test announcement mode = admin (default)\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json() ;",
									"pm.test(\"Expect length of announcements : 9\",()=>{",
									"    pm.expect(jsonData).to.be.an(\"array\") ;",
									"    pm.expect(jsonData.length).to.equal(9) ;",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-1-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test announcement mode = active\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json() ;",
									"pm.test(\"Expect length of announcements : 4\",()=>{",
									"    pm.expect(jsonData).to.be.an(\"array\") ;",
									"    pm.expect(jsonData.length).to.equal(4) ;",
									"})",
									"",
									"const ann1 = jsonData[0] ;",
									"pm.test(\"Expect row 1 is (PBI8-9) Title 8 -> ทุนการศึกษา\",()=>{",
									"    pm.expect(ann1.announcementTitle).to.equal(\"(PBI8-9) Title 8\") ;",
									"    pm.expect(ann1.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
									"})",
									"",
									"const ann3 = jsonData[3] ;",
									"pm.test(\"Expect row 4 is (PBI8-9) Title 1 -> ทั่วไป\",()=>{",
									"    pm.expect(ann3.announcementTitle).to.equal(\"(PBI8-9) Title 1\") ;",
									"    pm.expect(ann3.announcementCategory).to.equal(\"ทั่วไป\") ;",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements?mode=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							],
							"query": [
								{
									"key": "mode",
									"value": "active"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PBI-9-USER-ANNOUNCEMENT-CLOSE",
			"item": [
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-CLOSE-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test announcement mode = close\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json() ;",
									"pm.test(\"Expect length of announcements : 2\",()=>{",
									"    pm.expect(jsonData).to.be.an(\"array\") ;",
									"    pm.expect(jsonData.length).to.equal(2) ;",
									"})",
									"",
									"const ann1 = jsonData[0] ;",
									"pm.test(\"Expect row 1 is (PBI8-9) Title 5 -> ทุนการศึกษา\",()=>{",
									"    pm.expect(ann1.announcementTitle).to.equal(\"(PBI8-9) Title 5\") ;",
									"    pm.expect(ann1.closeDate).to.equal(\"2023-05-02T11:00:00Z\") ;",
									"    pm.expect(ann1.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
									"})",
									"",
									"const ann2 = jsonData[1] ;",
									"pm.test(\"Expect row 2 is (PBI8-9) Title 4 -> ทั่วไป\",()=>{",
									"    pm.expect(ann2.announcementTitle).to.equal(\"(PBI8-9) Title 4\") ;",
									"    pm.expect(ann2.closeDate).to.equal(\"2023-04-30T23:00:00Z\") ;",
									"    pm.expect(ann2.announcementCategory).to.equal(\"ทั่วไป\") ;",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements?mode=close",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							],
							"query": [
								{
									"key": "mode",
									"value": "close"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Clear-Data-PBI-8-9",
			"item": [
				{
					"name": "Delete Announcement",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let aids = JSON.parse(ids)",
									"console.log(aids)",
									"let id = aids.shift()",
									"pm.collectionVariables.set(\"ids\",JSON.stringify(aids))",
									"pm.collectionVariables.set('id',id)",
									"console.log('delete '+id)",
									"if(aids.length>0){",
									"    postman.setNextRequest(\"Delete Announcement\")",
									"} else {",
									"    postman.setNextRequest(null) ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/announcements/{{id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Prepare-Data-PBI-10-11",
			"item": [
				{
					"name": "Add Announcement Page",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let pid = Number(pm.collectionVariables.get(\"pid\"))",
									"pm.variables.set('title','(PBI10) Title '+pid)",
									"pm.variables.set('description','(PBI10) Description '+pid)",
									"pm.variables.set('display','Y')",
									"if(pid<15 || (pid>30 && pid<46)){",
									"    pm.variables.set('publishDate',\"2023-04-30T23:00:00Z\")",
									"} else {",
									"    pm.variables.set('publishDate',\"\")",
									"}",
									"if(pid<31){",
									"    pm.variables.set(\"closeDate\",\"2023-12-31T11:00:00Z\")",
									"    pm.variables.set(\"category\",1)",
									"}else if (pid<61){",
									"    pm.variables.set(\"closeDate\",\"\")",
									"    pm.variables.set(\"category\",2)",
									"} else {",
									"    pm.variables.set(\"closeDate\",\"2023-05-01T11:00:00Z\")",
									"    pm.variables.set(\"category\",3)    ",
									"}",
									"if(pid==62){",
									"    pm.variables.set('publishDate',\"2023-04-30T23:00:00Z\")",
									"}",
									"if(pid==63){",
									"    pm.variables.set('display','N')",
									"}",
									"",
									"if(pid<63){",
									"    postman.setNextRequest(\"Add Announcement Page\")",
									"} else {",
									"    postman.setNextRequest(null) ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let pid = pm.collectionVariables.get(\"pid\")",
									"let count = Number(pid)+1",
									"if(count==15){",
									"    count = 16",
									"}",
									"pm.collectionVariables.set(\"pid\",count)",
									"",
									"var data = pm.response.json()",
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let a_ids = JSON.parse(ids)",
									"a_ids.push(data.id)",
									"let s_ids = JSON.stringify(a_ids)",
									"pm.collectionVariables.set(\"ids\",s_ids)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"announcementTitle\": \"{{title}}\",\n        \"announcementDescription\": \"{{description}}\",\n        \"publishDate\": \"{{publishDate}}\",\n        \"closeDate\": \"{{closeDate}}\",\n        \"announcementDisplay\": \"{{display}}\",\n        \"categoryId\": {{category}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PBI-10-USER-VIEW-ANNOUNCEMENT-PAGE",
			"item": [
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-PAGE-1-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = active]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: false, first: true, totalPages: 12, totalElements: 60, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.false ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(12) ;",
									"    pm.expect(data.totalElements).to.equal(60) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 60\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 60\") ;",
									"    pm.expect(row1.publishDate).to.be.null ;",
									"    pm.expect(row1.closeDate).to.be.null ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-PAGE-1-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = active]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: false, first: true, totalPages: 12, totalElements: 60, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.false ;",
									"    pm.expect(data.first).to.be.false ;",
									"    pm.expect(data.totalPages).to.equal(12) ;",
									"    pm.expect(data.totalElements).to.equal(60) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(1) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 55\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 55\") ;",
									"    pm.expect(row1.publishDate).to.be.null ;",
									"    pm.expect(row1.closeDate).to.be.null ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=active&page=1&size=5",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "active"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-PAGE-2-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = close]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: true, first: true, totalPages: 1, totalElements: 2, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.true ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(1) ;",
									"    pm.expect(data.totalElements).to.equal(2) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 62\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 62\") ;",
									"    pm.expect(row1.publishDate).to.equal(\"2023-04-30T23:00:00Z\") ;",
									"    pm.expect(row1.closeDate).to.be.equal(\"2023-05-01T11:00:00Z\") ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"หางาน\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=close&page=0",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "close"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-PAGE-2-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = close]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: true, first: true, totalPages: 1, totalElements: 2, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.true ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(1) ;",
									"    pm.expect(data.totalElements).to.equal(2) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 62\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 62\") ;",
									"    pm.expect(row1.publishDate).to.equal(\"2023-04-30T23:00:00Z\") ;",
									"    pm.expect(row1.closeDate).to.be.equal(\"2023-05-01T11:00:00Z\") ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"หางาน\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=close&page=0&size=5",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "close"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PBI-11-USER-VIEW-ANNOUNCEMENT-BY-CATEGORY",
			"item": [
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-BY-CATEGORY-1-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Category [mode = active, category=ทั้งหมด]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: false, first: true, totalPages: 12, totalElements: 60, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.false ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(12) ;",
									"    pm.expect(data.totalElements).to.equal(60) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 60\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 60\") ;",
									"    pm.expect(row1.publishDate).to.be.null ;",
									"    pm.expect(row1.closeDate).to.be.null ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-BY-CATEGORY-1-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = active, category=ทั่วไป]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: false, first: true, totalPages: 6, totalElements: 30, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.false ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(6) ;",
									"    pm.expect(data.totalElements).to.equal(30) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 30\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 30\") ;",
									"    pm.expect(row1.publishDate).to.be.null ;",
									"    pm.expect(row1.closeDate).to.be.equal(\"2023-12-31T11:00:00Z\") ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"ทั่วไป\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=active&category=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "active"
								},
								{
									"key": "category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-BY-CATEGORY-1-3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = active, category=ทั่วไป]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: false, first: true, totalPages: 6, totalElements: 30, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.false ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(6) ;",
									"    pm.expect(data.totalElements).to.equal(30) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 30\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 30\") ;",
									"    pm.expect(row1.publishDate).to.be.null ;",
									"    pm.expect(row1.closeDate).to.be.equal(\"2023-12-31T11:00:00Z\") ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"ทั่วไป\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=active&category=1&page=0&size=5",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "active"
								},
								{
									"key": "category",
									"value": "1"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-BY-CATEGORY-1-4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = active, category=ฝึกงาน]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: true, first: true, totalPages: 0, totalElements: 0, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.true ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(0) ;",
									"    pm.expect(data.totalElements).to.equal(0) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content",
									"pm.test(\"Expect content is empty\",()=>{",
									"    pm.expect(row1).be.empty ",
									"",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=active&category=4",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "active"
								},
								{
									"key": "category",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-BY-CATEGORY-1-5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = close, category = ทั่วไป]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: true, first: true, totalPages: 0, totalElements: 0, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.true ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(0) ;",
									"    pm.expect(data.totalElements).to.equal(0) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content",
									"pm.test(\"Expect content is empty\",()=>{",
									"    pm.expect(row1).be.empty ",
									"",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=close&category=1",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "close"
								},
								{
									"key": "category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC-USER-VIEW-ANNOUNCEMENT-BY-CATEGORY-1-6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Announcement Page [mode = close, category = หางาน]\",function(){",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json() ;",
									"pm.test(\"Expect all keys [content, last,first,toalPages,totalElements,size,page]\",()=>{",
									"    pm.expect(data).to.be.an(\"object\") ;",
									"    pm.expect(data).to.have.all.keys('content','last','first','totalPages','totalElements','size','page')",
									"})",
									"",
									"pm.test(\"Expect last: true, first: true, totalPages: 1, totalElements: 2, size: 5, page=0\",()=>{",
									"    pm.expect(data.last).to.be.true ;",
									"    pm.expect(data.first).to.be.true ;",
									"    pm.expect(data.totalPages).to.equal(1) ;",
									"    pm.expect(data.totalElements).to.equal(2) ;",
									"    pm.expect(data.size).to.equal(5) ;",
									"    pm.expect(data.page).to.equal(0) ;",
									"})",
									"",
									"var row1 = data.content[0]",
									"pm.test(\"Expect data the first row is (PBI10) Title 62\",()=>{",
									"    pm.expect(row1.announcementTitle).to.equal(\"(PBI10) Title 62\") ;",
									"    pm.expect(row1.publishDate).to.be.equal(\"2023-04-30T23:00:00Z\")  ;",
									"    pm.expect(row1.closeDate).to.be.equal(\"2023-05-01T11:00:00Z\") ;",
									"    pm.expect(row1.announcementDisplay).to.equal(\"Y\") ;",
									"    pm.expect(row1.announcementCategory).to.equal(\"หางาน\") ;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/announcements/pages?mode=close&category=3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"pages"
							],
							"query": [
								{
									"key": "mode",
									"value": "close"
								},
								{
									"key": "category",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Clear-Data-PBI-10-11",
			"item": [
				{
					"name": "Delete Announcement PBI-10-11",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let ids = pm.collectionVariables.get(\"ids\")",
									"let aids = JSON.parse(ids)",
									"console.log(aids)",
									"let id = aids.shift()",
									"pm.collectionVariables.set(\"ids\",JSON.stringify(aids))",
									"pm.collectionVariables.set('id',id)",
									"console.log('delete '+id)",
									"if(aids.length>0){",
									"    postman.setNextRequest(\"Delete Announcement PBI-10-11\")",
									"} else {",
									"    postman.setNextRequest(null) ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/announcements/{{id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"announcements",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "ids",
			"value": "[]",
			"type": "string"
		},
		{
			"key": "id",
			"value": "",
			"type": "string"
		},
		{
			"key": "pid",
			"value": "0",
			"type": "string"
		}
	]
}